@model Vidly.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}
@Styles.Render("~/Content/main")

<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "validate-form form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <span class="login100-form-title p-b-32">
                    @ViewBag.Title
                    <span class="txt3 text-center validation-summary">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</span>
                </span>

                @Html.LabelFor(m => m.Email, new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-36">
                    @Html.TextBoxFor(m => m.Email, new { @class = "input100", @type = "Email" })
                    <span class="focus-input100"></span>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>


                @Html.LabelFor(m => m.Password, new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-12">
                    <span class="btn-show-pass">
                        <i class="fa fa-eye"></i>
                    </span>
                    @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                    <span class="focus-input100"></span>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>


                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-12">
                    <span class="btn-show-pass">
                        <i class="fa fa-eye"></i>
                    </span>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100" })
                    <span class="focus-input100"></span>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(m => m.Code, new { @class = "txt1 p-b-11 d-none" })
                <div class="wrap-input100 validate-input m-b-12 d-none">
                    <span class="btn-show-pass">
                        <i class="fa fa-eye"></i>
                    </span>
                    @Html.TextBoxFor(m => m.Code, new { @class = "input100" })
                    <span class="focus-input100"></span>
                    @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                </div>

                <div class="container-login100-form-btn flex-sb">
                    <input type="submit" value="Reset" class="login100-form-btn" />
                </div>

            }

        </div>
    </div>
</div>




@Scripts.Render("~/bundles/jquery")

@Scripts.Render("~/bundles/main")


@*@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Reset your password.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Reset" />
            </div>
        </div>
    }*@

