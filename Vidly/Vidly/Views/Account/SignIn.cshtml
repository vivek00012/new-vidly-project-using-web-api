@using Vidly.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/homepage")






@if (!Request.IsAuthenticated)
{
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    <span class="login100-form-logo">
                        <img src="~/Content/assets/vidly-logo.png" width="100" height="100">
                        <span class="txt1">Welcome to Vidly</span>
                    </span>

                    <span class="login100-form-title p-b-34 p-t-27">
                        Login
                    </span>

                    <div class="wrap-input100 validate-input">
                        @Html.TextBoxFor(m => m.Email, new { @class = "input100", @type = "Email", @placeholder = "Email" })
                        <span class="focus-input100" data-placeholder="&#xf207;"></span>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                    </div>

                    <div class="wrap-input100 validate-input" data-validate="Enter password">
                        @Html.PasswordFor(m => m.Password, new { @class = "input100", @placeholder = "Password" })
                        <span class="focus-input100" data-placeholder="&#xf191;"></span>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    </div>

                    <div class="contact100-form-checkbox">
                        <input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">
                        <label class="label-checkbox100" for="ckb1">
                            @Html.DisplayNameFor(m => m.RememberMe)
                        </label>
                    </div>

                    <div class="container-login100-form-btn">
                        <button type="submit" class="login100-form-btn">Login</button>
                        <a class="login100-form-btn" href='@Url.Action("Register", "Account")'>
                            Register
                        </a>
                    </div>

                    <div class="text-center p-t-90 txt3">
                        @Html.ActionLink("Forgot your password?", "ForgotPassword", "Account")
                    </div>
                }
            </div>
        </div>
    </div>


}


@*<div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    <span class="login100-form-title p-b-32">
                        @ViewBag.Title
                        <span class="txt3 text-center validation-summary">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</span>
                    </span>

                    @Html.LabelFor(m => m.Email, new { @class = "txt1 p-b-11" })
                    <div class="wrap-input100 validate-input m-b-36">
                        @Html.TextBoxFor(m => m.Email, new { @class = "input100", @type = "Email" })
                        <span class="focus-input100"></span>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>


                    @Html.LabelFor(m => m.Password, new { @class = "txt1 p-b-11" })
                    <div class="wrap-input100 validate-input m-b-12">
                        <span class="btn-show-pass">
                            <i class="fa fa-eye"></i>
                        </span>
                        @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                        <span class="focus-input100"></span>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="flex-sb-m w-full p-b-48">
                        <div class="contact100-form-checkbox">
                            <input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">
                            <label class="label-checkbox100" for="ckb1">
                                @Html.DisplayNameFor(m => m.RememberMe)
                            </label>
                        </div>
                        <div>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword", new { @class = "txt3" })
                        </div>
                    </div>


                    <div class="container-login100-form-btn flex-sb">
                        <input type="submit" value="Log in" class="login100-form-btn" />
                        <p class="flex-m">
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>
                    </div>

                }

            </div>
        </div>
    </div>*@












@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/main")
