@using Vidly.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
@Styles.Render("~/Content/main")


<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

            <span class="login100-form-title p-b-32">
                @ViewBag.Title
                <span class="txt3 text-center validation-summary">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</span>
            </span>
             
                @Html.LabelFor(m => m.Email, new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-36">
                    @Html.TextBoxFor(m => m.Email, new { @class = "input100", @type = "Email" })
                    <span class="focus-input100"></span>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>


                @Html.LabelFor(m => m.Password, new { @class = "txt1 p-b-11" })
                <div class="wrap-input100 validate-input m-b-12">
                    <span class="btn-show-pass">
                        <i class="fa fa-eye"></i>
                    </span>
                    @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                    <span class="focus-input100"></span>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <div class="flex-sb-m w-full p-b-48">
                    <div class="contact100-form-checkbox">
                        <input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">
                        <label class="label-checkbox100" for="ckb1">
                            @Html.DisplayNameFor(m => m.RememberMe)
                        </label>
                    </div>
                    <div>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword",new {@class="txt3" })
                    </div>
                </div>
              

                <div class="container-login100-form-btn flex-sb">
                    <input type="submit" value="Log in" class="login100-form-btn" />
                    <p class="flex-m">
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                </div>

            }

        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")

@Scripts.Render("~/bundles/main")





























@*<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                //Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>
            }
        </section>
    </div>
    <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
</div>*@
